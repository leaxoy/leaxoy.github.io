<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System on 无双</title>
    <link>https://leaxoy.github.io/categories/system/</link>
    <description>Recent content in System on 无双</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 26 Dec 2019 12:30:08 +0800</lastBuildDate>
    
	<atom:link href="https://leaxoy.github.io/categories/system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言并发安全与不安全</title>
      <link>https://leaxoy.github.io/2019/12/go-concurrent-saft-and-unsafe/</link>
      <pubDate>Thu, 26 Dec 2019 12:30:08 +0800</pubDate>
      
      <guid>https://leaxoy.github.io/2019/12/go-concurrent-saft-and-unsafe/</guid>
      <description>在开发过程中，我们难免要跨线程/协程进行数据的访问与修改，由此便会产生数据安全性问题，那么对于号称高并发，高性能的go语言来说，又会是怎么样</description>
    </item>
    
    <item>
      <title>Go实现Mqtt broker</title>
      <link>https://leaxoy.github.io/2019/12/mqtt-implement-in-go/</link>
      <pubDate>Mon, 16 Dec 2019 15:26:29 +0800</pubDate>
      
      <guid>https://leaxoy.github.io/2019/12/mqtt-implement-in-go/</guid>
      <description>MQTT broker的主要作用有两个，处理Publisher发布的消息，将消息投递给对应的Subscriber。 服务器的设计因此也分为几个模块： S</description>
    </item>
    
    <item>
      <title>Mqtt协议解析</title>
      <link>https://leaxoy.github.io/2019/12/mqtt-protocol/</link>
      <pubDate>Mon, 16 Dec 2019 15:26:17 +0800</pubDate>
      
      <guid>https://leaxoy.github.io/2019/12/mqtt-protocol/</guid>
      <description>这篇属于IM三剑客中的第二篇，前面一篇主要讲解了通用IM的一些架构的知识，这边主要讲解MQTT协议的细节，最后一篇将会着重介绍了MQTT Br</description>
    </item>
    
    <item>
      <title>并发模型解析</title>
      <link>https://leaxoy.github.io/2019/12/concurrent-model-overview/</link>
      <pubDate>Sun, 15 Dec 2019 17:04:36 +0800</pubDate>
      
      <guid>https://leaxoy.github.io/2019/12/concurrent-model-overview/</guid>
      <description></description>
    </item>
    
    <item>
      <title>通用IM架构</title>
      <link>https://leaxoy.github.io/2019/12/im-architecture/</link>
      <pubDate>Thu, 12 Dec 2019 16:27:11 +0800</pubDate>
      
      <guid>https://leaxoy.github.io/2019/12/im-architecture/</guid>
      <description>这篇属于IM三剑客中的一篇，后面两篇主要着重介绍了MQTT协议以及MQTT Broker的Go语言实现，如果没有这类需求的话可以跳过。 Mqtt</description>
    </item>
    
  </channel>
</rss>